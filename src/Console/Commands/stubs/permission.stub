<?php

use Illuminate\Support\Facades\Config;
use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreatePermissionTable extends Migration
{
    /**
     * @var string
     */
    protected $usersTable;

    /**
     * @var string
     */
    protected $passwordResetsTable;


    public function __construct() {
        $this->usersTable = Config::get('permission.users_table');
        $this->passwordResetsTable = Config::get('permission.password_resets_table');
    }

    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        // Create table for storing admin users
        Schema::create($this->usersTable, function (Blueprint $table) {
            $table->increments('id');
            $table->string('first_name', 32);
            $table->string('last_name', 32);
            $table->string('email', 128)->unique();
            $table->string('phone', 11)->nullable()->unique();
            $table->string('password');
            $table->boolean('is_active')->default(true);
            $table->text('extra')->nullable();
            $table->timestamp('log_date')->nullable();
            $table->string('log_ip', 45)->nullable();
            $table->unsignedInteger('log_num')->default(0);
            $table->rememberToken();
            $table->timestamps();
        });

        // Create table for storing admin user password resets
        Schema::create($this->passwordResetsTable, function (Blueprint $table) {
            $table->increments('id');
            $table->string('email')->index();
            $table->string('token')->index();
            $table->timestamp('created_at')->nullable();
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists($this->usersTable);
        Schema::dropIfExists($this->passwordResetsTable);
    }
}